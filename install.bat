@echo off
REM install.bat - Script de instala√ß√£o completa para Windows
REM Sistema de Automa√ß√£o Servopa + Todoist

title Instala√ß√£o do Sistema de Automa√ß√£o Servopa + Todoist

echo ==========================================
echo ü§ñ Instala√ß√£o Autom√°tica do Sistema
echo Sistema de Automa√ß√£o Servopa + Todoist
echo ==========================================
echo.

REM Verificar se est√° executando como administrador
net session >nul 2>&1
if %errorLevel% == 0 (
    echo [‚ö†] Executando como administrador - OK
) else (
    echo [‚ö†] AVISO: N√£o est√° executando como administrador
    echo [‚ö†] Algumas instala√ß√µes podem falhar
    echo.
    pause
)

echo [INFO] Sistema: Windows
echo.

REM 1. Verificar Python
echo [INFO] Verificando Python...

python --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=2" %%i in ('python --version') do echo [‚úì] Python encontrado: %%i
    set PYTHON_CMD=python
    goto :check_pip
)

python3 --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=2" %%i in ('python3 --version') do echo [‚úì] Python3 encontrado: %%i
    set PYTHON_CMD=python3
    goto :check_pip
)

py --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=2" %%i in ('py --version') do echo [‚úì] Python (py) encontrado: %%i
    set PYTHON_CMD=py
    goto :check_pip
)

echo [‚úó] Python n√£o encontrado!
echo.
echo [INFO] Baixando Python...

REM Baixar Python usando PowerShell
echo [INFO] Baixando Python 3.11 (64-bit)...
powershell -Command "(New-Object Net.WebClient).DownloadFile('https://www.python.org/ftp/python/3.11.0/python-3.11.0-amd64.exe', 'python-installer.exe')"

if exist python-installer.exe (
    echo [INFO] Instalando Python...
    echo [INFO] IMPORTANTE: Marque a op√ß√£o "Add Python to PATH" durante a instala√ß√£o!
    echo [INFO] Pressione qualquer tecla para continuar com a instala√ß√£o...
    pause >nul
    
    start /wait python-installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0
    
    del python-installer.exe
    
    echo [INFO] Reinicie o terminal e execute este script novamente.
    pause
    exit /b 1
) else (
    echo [‚úó] Falha ao baixar Python
    echo [INFO] Baixe manualmente de: https://www.python.org/downloads/
    pause
    exit /b 1
)

:check_pip
echo.
echo [INFO] Verificando pip...

%PYTHON_CMD% -m pip --version >nul 2>&1
if %errorLevel% == 0 (
    echo [‚úì] pip encontrado
) else (
    echo [INFO] Instalando pip...
    %PYTHON_CMD% -m ensurepip --upgrade
    
    %PYTHON_CMD% -m pip --version >nul 2>&1
    if %errorLevel% == 0 (
        echo [‚úì] pip instalado com sucesso!
    ) else (
        echo [‚úó] Falha na instala√ß√£o do pip
        pause
        exit /b 1
    )
)

echo.

REM 2. Verificar Google Chrome
echo [INFO] Verificando Google Chrome...

reg query "HKEY_CURRENT_USER\Software\Google\Chrome\BLBeacon" /v version >nul 2>&1
if %errorLevel% == 0 (
    echo [‚úì] Google Chrome encontrado
    goto :create_venv
)

reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Google\Chrome\BLBeacon" /v version >nul 2>&1
if %errorLevel% == 0 (
    echo [‚úì] Google Chrome encontrado
    goto :create_venv
)

where chrome >nul 2>&1
if %errorLevel% == 0 (
    echo [‚úì] Google Chrome encontrado
    goto :create_venv
)

echo [‚ö†] Google Chrome n√£o encontrado
echo [INFO] Baixando Google Chrome...

powershell -Command "(New-Object Net.WebClient).DownloadFile('https://dl.google.com/chrome/install/375.126/chrome_installer.exe', 'chrome_installer.exe')"

if exist chrome_installer.exe (
    echo [INFO] Instalando Google Chrome...
    start /wait chrome_installer.exe /silent /install
    del chrome_installer.exe
    echo [‚úì] Google Chrome instalado!
) else (
    echo [‚ö†] Falha ao baixar Chrome. Baixe manualmente de: https://www.google.com/chrome/
)

:create_venv
echo.
echo [INFO] Criando ambiente virtual...

if exist venv (
    echo [‚ö†] Ambiente virtual j√° existe. Removendo...
    rmdir /s /q venv
)

%PYTHON_CMD% -m venv venv

if exist venv (
    echo [‚úì] Ambiente virtual criado!
) else (
    echo [‚úó] Falha na cria√ß√£o do ambiente virtual
    pause
    exit /b 1
)

echo.

REM 3. Ativar ambiente virtual e instalar depend√™ncias
echo [INFO] Ativando ambiente virtual...
call venv\Scripts\activate.bat

echo [INFO] Atualizando pip...
python -m pip install --upgrade pip

echo [INFO] Instalando depend√™ncias Python...
python -m pip install selenium webdriver-manager requests beautifulsoup4 schedule Flask Flask-SocketIO Flask-CORS python-socketio python-engineio

echo [‚úì] Depend√™ncias Python instaladas!
echo.

REM 4. Verificar estrutura de arquivos
echo [INFO] Verificando estrutura de arquivos...

set files_ok=1

if not exist main_gui.py (
    echo [‚ö†] main_gui.py n√£o encontrado
    set files_ok=0
)

if not exist requirements.txt (
    echo [‚ö†] requirements.txt n√£o encontrado
    set files_ok=0
)

if not exist credentials.json (
    echo [‚ö†] credentials.json n√£o encontrado
    set files_ok=0
)

if not exist auth\servopa_auth.py (
    echo [‚ö†] auth\servopa_auth.py n√£o encontrado
    set files_ok=0
)

if not exist auth\todoist_auth.py (
    echo [‚ö†] auth\todoist_auth.py n√£o encontrado  
    set files_ok=0
)

if not exist ui\modern_automation_gui.py (
    echo [‚ö†] ui\modern_automation_gui.py n√£o encontrado
    set files_ok=0
)

if %files_ok%==1 (
    echo [‚úì] Todos os arquivos necess√°rios est√£o presentes!
) else (
    echo [‚ö†] Alguns arquivos est√£o ausentes. Verifique a estrutura do projeto.
)

echo.

REM 5. Testar instala√ß√£o
echo [INFO] Testando instala√ß√£o...

python -c "import selenium; from webdriver_manager.chrome import ChromeDriverManager; import tkinter as tk; import requests; from bs4 import BeautifulSoup; import schedule; import flask; from flask_socketio import SocketIO; from flask_cors import CORS; print('‚úì Todas as depend√™ncias OK!')" 2>nul

if %errorLevel% == 0 (
    echo [‚úì] Teste de depend√™ncias passou!
) else (
    echo [‚úó] Teste de depend√™ncias falhou!
    echo [INFO] Verifique se todas as depend√™ncias foram instaladas corretamente
)

echo.

REM 5.5. Criar arquivo de configura√ß√£o da Evolution API
echo [INFO] Verificando arquivo de configura√ß√£o da Evolution API...

if not exist evolution_config.json (
    echo [INFO] Criando evolution_config.json...
    
    (
        echo {
        echo   "api": {
        echo     "base_url": "https://zap.tekvosoft.com",
        echo     "instance_name": "david -tekvo",
        echo     "api_key": "634A7E882CE5-4314-8C5B-BC79C0A9EBBA"
        echo   },
        echo   "grupos": {
        echo     "grupo1": {
        echo       "nome": "Grupo 1 - Clientes Principal",
        echo       "contatos": [
        echo         {
        echo           "phone": "5519995378302",
        echo           "name": "Jo√£o Silva"
        echo         },
        echo         {
        echo           "phone": "5519988776655",
        echo           "name": "Maria Santos"
        echo         }
        echo       ]
        echo     },
        echo     "grupo2": {
        echo       "nome": "Grupo 2 - Clientes Secund√°rio",
        echo       "contatos": [
        echo         {
        echo           "phone": "5519977665544",
        echo           "name": "Ana Costa"
        echo         },
        echo         {
        echo           "phone": "5519966554433",
        echo           "name": "Carlos Oliveira"
        echo         }
        echo       ]
        echo     }
        echo   },
        echo   "mensagens": {
        echo     "dia7": {
        echo       "grupo1": "Ol√° {nome}! üéâ\n\nLembrando que hoje, dia 7, √© o √∫ltimo dia para enviar seus lances!\n\nN√£o perca essa oportunidade! ‚è∞",
        echo       "grupo2": "Oi {nome}! üì¢\n\nAviso importante: hoje √© dia 7 e voc√™ tem at√© o final do dia para enviar seus lances.\n\nQualquer d√∫vida, estamos √† disposi√ß√£o! üí™"
        echo     },
        echo     "dia15": {
        echo       "grupo1": "Ol√° {nome}! üéØ\n\nHoje √© dia 15! √öltimo dia para enviar seus lances.\n\nVamos l√°, n√£o deixe passar! üöÄ",
        echo       "grupo2": "Oi {nome}! ‚è∞\n\nLembrando: dia 15 √© o prazo final para lances!\n\nConte conosco para ajudar! üìû"
        echo     }
        echo   },
        echo   "agendamento": {
        echo     "enabled": false,
        echo     "horario_envio": "09:00",
        echo     "dias_para_enviar": [7, 15]
        echo   },
        echo   "configuracoes": {
        echo     "delay_entre_mensagens": 2.0,
        echo     "tentar_reenviar_falhas": true,
        echo     "max_tentativas": 3
        echo   }
        echo }
    ) > evolution_config.json
    
    echo [‚úì] Arquivo evolution_config.json criado!
) else (
    echo [‚úì] Arquivo evolution_config.json j√° existe!
)

echo.

REM 6. Criar arquivo de execu√ß√£o r√°pida
echo [INFO] Criando arquivo de execu√ß√£o r√°pida...

echo @echo off > run.bat
echo title Sistema de Automa√ß√£o Servopa + Todoist >> run.bat
echo echo Ativando ambiente virtual... >> run.bat
echo call venv\Scripts\activate.bat >> run.bat
echo echo Iniciando sistema... >> run.bat
echo python main_gui.py >> run.bat
echo pause >> run.bat

echo [‚úì] Arquivo run.bat criado!

echo.
echo ==========================================
echo [‚úì] üéâ INSTALA√á√ÉO CONCLU√çDA COM SUCESSO!
echo ==========================================
echo.
echo [INFO] Como executar o sistema:
echo.
echo Interface Desktop (Tkinter):
echo    Clique duas vezes em: run.bat
echo.
echo Interface Web (Moderna):
echo    Clique duas vezes em: web\run_web.bat
echo    Depois acesse: http://localhost:5000
echo.
echo [INFO] Sistema pronto para uso! üöÄ
echo.

REM Ativar ambiente virtual automaticamente
echo ==========================================
echo [INFO] Ativando ambiente virtual automaticamente...
echo ==========================================
echo.

if exist venv\Scripts\activate.bat (
    call venv\Scripts\activate.bat
    echo [‚úì] Ambiente virtual ativado!
    echo.
    echo [INFO] Voc√™ j√° est√° dentro do ambiente virtual Python.
    echo [INFO] Agora voc√™ pode executar diretamente: python main_gui.py
    echo.
    echo [INFO] Para sair do ambiente virtual, digite: deactivate
    echo.
)

REM Perguntar se quer executar agora
set /p choice="Deseja executar o sistema agora? (s/n): "
if /i "%choice%"=="s" (
    echo.
    echo [INFO] Iniciando sistema...
    python main_gui.py
)

echo.
echo Pressione qualquer tecla para sair...
pause >nul